---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: docker-registry-ui
  name: docker-registry-ui-http
  namespace: docker-registry
spec:
  selector:
    app: docker-registry-ui
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-registry-ui
  name: docker-registry-ui
  namespace: docker-registry
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: docker-registry-ui
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: docker-registry-ui
        name: docker-registry-ui
    spec:
      containers:
        - image: "docker.io/joxit/docker-registry-ui:latest"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: http
          name: docker-registry-ui
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          env:
            - name: REGISTRY_URL
              value: https://registry.${SECRET_DOMAIN}
            - name: REGISTRY_TITLE
              value: "Docker registry UI"
            - name: DELETE_IMAGES
              value: "true"
            - name: SHOW_CONTENT_DIGEST
              value: "true"
            - name: SINGLE_REGISTRY
              value: "true"
            - name: NGINX_PROXY_PASS_URL
              value: "http://registry.${SECRET_DOMAIN}"
          readinessProbe:
            httpGet:
              path: /
              port: http
          nodeSelector:
            node-type: worker
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          restartPolicy: Always
