---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blocky-config
  namespace: dns-test
data:
  config.yml: |
    upstream:
      # these external DNS resolvers will be used. Blocky picks 2 random resolvers from the list for each query
      # format for resolver: [net:]host:[port][/path]. net could be empty (default, shortcut for tcp+udp), tcp+udp, tcp, udp, tcp-tls or https (DoH). If port is empty, default port will be used (53 for udp and tcp, 853 for tcp-tls, 443 for https (Doh))
      # this configuration is mandatory, please define at least one external DNS resolver
      default:
        - tcp+udp:192.168.178.122

      # optional: use client name (with wildcard support: * - sequence of any characters, [0-9] - range)
      # or single ip address / client subnet as CIDR notation
      ## laptop*:
      ##   - 123.123.123.123


    # optional: custom IP address(es) for domain name (with all sub-domains). Multiple addresses must be separated by a comma
    # example: query "printer.lan" or "my.printer.lan" will return 192.168.178.3
    ## customDNS:
    ##  mapping:
    ##    printer.lan: 192.168.178.3,2001:0db8:85a3:08d3:1319:8a2e:0370:7344

    # optional: definition, which DNS resolver(s) should be used for queries to the domain (with all sub-domains). Multiple resolvers must be separated by a comma
    # Example: Query client.fritz.box will ask DNS server 192.168.178.1. This is necessary for local network, to resolve clients by host name
    ## conditional:
    ##   # optional: replace domain in the query with other domain before resover lookup in the mapping
    ##   rewrite:
    ##     example.com: fritz.box
    ##   mapping:
    ##     fritz.box: udp:192.168.178.1
    ##     lan.net: udp:192.168.178.1,udp:192.168.178.2


    # optional: use black and white lists to block queries (for example ads, trackers, adult pages etc.)
    blocking:
      # definition of blacklist groups. Can be external link (http/https) or local file
      blackLists:
        ads:
          - https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
          - https://hosts.oisd.nl/
          - https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts_without_controversies.txt
          - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Spam/hosts
          - https://v.firebog.net/hosts/static/w3kbl.txt
          - https://adaway.org/hosts.txt
          - https://v.firebog.net/hosts/AdguardDNS.txt
          - https://v.firebog.net/hosts/Admiral.txt
          - https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt
          - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
          - https://v.firebog.net/hosts/Easylist.txt
          - https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext
          - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts
          - https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts
          - https://v.firebog.net/hosts/Easyprivacy.txt
          - https://v.firebog.net/hosts/Prigent-Ads.txt
          - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts
          - https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt
          - https://hostfiles.frogeye.fr/firstparty-trackers-hosts.txt
          - https://osint.digitalside.it/Threat-Intel/lists/latestdomains.txt
          - https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt
          - https://v.firebog.net/hosts/Prigent-Crypto.txt
          - https://bitbucket.org/ethanr/dns-blacklists/raw/8575c9f96e5b4a1308f2f12394abd86d0927a4a0/bad_lists/Mandiant_APT1_Report_Appendix_D.txt
          - https://phishing.army/download/phishing_army_blocklist_extended.txt
          - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
          - https://v.firebog.net/hosts/Shalla-mal.txt
          - https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt
          - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts
          - https://urlhaus.abuse.ch/downloads/hostfile/
          - https://zerodot1.gitlab.io/CoinBlockerLists/hosts_browser
          - https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt
        special:
          - https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews/hosts

      # definition of whitelist groups. Attention: if the same group has black and whitelists, whitelists will be used to disable particular blacklist entries. If a group has only whitelist entries -> this means only domains from this list are allowed, all other domains will be blocked
      ## whitelists:
      ##  ads:
      ##    - whitelist.txt

      # definition: which groups should be applied for which client
      clientGroupsBlock:
        # default will be used, if no special definition for a client name exists
        default:
          - ads
          - special
        # use client name (with wildcard support: * - sequence of any characters, [0-9] - range)
        # or single ip address / client subnet as CIDR notation
        ## laptop*:
        ##   - ads
        ## 192.168.178.1/24:
        ##   - special
      # which response will be sent, if query is blocked:
      # zeroIp: 0.0.0.0 will be returned (default)
      # nxDomain: return NXDOMAIN as return code
      # comma separated list of destination IP adresses (for example: 192.100.100.15, 2001:0db8:85a3:08d3:1319:8a2e:0370:7344). Should contain ipv4 and ipv6 to cover all query types. Useful with running web server on this address to display the "blocked" page.
      blockType: zeroIp
      # optional: automatically list refresh period in minutes. Default: 4h.
      # Negative value -> deactivate automatically refresh.
      # 0 value -> use default
      refreshPeriod: 0
  
