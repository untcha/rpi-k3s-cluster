---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: flux-system
spec:
  chart:
    spec:
      chart: grafana
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: grafana
      version: 6.32.1
  interval: 1m0s
  targetNamespace: monitoring
  values:
    adminPassword: ${SECRET_GRAFANA_ADMIN_PASSWORD}
    adminUser: ${SECRET_GRAFANA_ADMIN_USER}
    affinity: {}
    autoscaling:
      enabled: false
    containerSecurityContext: {}
    dashboardProviders: {}
    dashboards: {}
    dashboardsConfigMaps: {}
    datasources: {}
    deploymentStrategy:
      type: Recreate
    downloadDashboards:
      env: {}
      envFromSecret: ""
      resources: {}
    downloadDashboardsImage:
      pullPolicy: IfNotPresent
      repository: curlimages/curl
      sha: ""
      tag: 7.73.0
    enableKubeBackwardCompatibility: false
    enableServiceLinks: true
    env:
      GF_PANELS_DISABLE_SANITIZE_HTML: true
    envFromConfigMaps: []
    envFromSecret: ""
    envFromSecrets: []
    envRenderSecret: {}
    envValueFrom: {}
    extraConfigmapMounts: []
    extraContainerVolumes: []
    extraContainers: ""
    extraEmptyDirMounts: []
    extraExposePorts: []
    extraInitContainers: []
    extraLabels: {}
    extraObjects: []
    extraSecretMounts: []
    extraVolumeMounts: []
    grafana.ini:
      analytics:
        check_for_updates: true
      grafana_net:
        url: https://grafana.net
      log:
        mode: console
      paths:
        data: /var/lib/grafana/
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
    headlessService: false
    hostAliases: []
    image:
      pullPolicy: IfNotPresent
      repository: grafana/grafana
      sha: ""
      tag: ""
    imageRenderer:
      affinity: {}
      enabled: false
      env:
        HTTP_HOST: 0.0.0.0
      grafanaProtocol: http
      grafanaSubPath: ""
      hostAliases: []
      image:
        pullPolicy: Always
        repository: grafana/grafana-image-renderer
        sha: ""
        tag: latest
      networkPolicy:
        limitEgress: false
        limitIngress: true
      nodeSelector: {}
      podPortName: http
      priorityClassName: ""
      replicas: 1
      resources: {}
      revisionHistoryLimit: 10
      securityContext: {}
      service:
        enabled: true
        port: 8081
        portName: http
        targetPort: 8081
      serviceAccountName: ""
      tolerations: []
    ingress:
      annotations: {}
      enabled: false
      extraPaths: []
      hosts:
      - chart-example.local
      labels: {}
      path: /
      pathType: Prefix
      tls: []
    initChownData:
      enabled: true
      image:
        pullPolicy: IfNotPresent
        repository: busybox
        sha: ""
        tag: 1.31.1
      resources: {}
    ldap:
      config: ""
      enabled: false
      existingSecret: ""
    lifecycleHooks: {}
    livenessProbe:
      failureThreshold: 10
      httpGet:
        path: /api/health
        port: 3000
      initialDelaySeconds: 60
      timeoutSeconds: 30
    namespaceOverride: ""
    networkPolicy:
      allowExternal: true
      egress:
        enabled: false
        ports: []
      enabled: false
      explicitNamespacesSelector: {}
      ingress: false
    nodeSelector:
      node-type: worker
    notifiers: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      enabled: true
      existingClaim: grafana-data-pvc
      finalizers:
      - kubernetes.io/pvc-protection
      inMemory:
        enabled: false
      size: 10Gi
      type: pvc
    plugins:
    - grafana-piechart-panel
    podDisruptionBudget: {}
    podPortName: grafana
    rbac:
      create: true
      extraClusterRoleRules: []
      extraRoleRules: []
      namespaced: false
      pspEnabled: true
      pspUseAppArmor: true
    readinessProbe:
      httpGet:
        path: /api/health
        port: 3000
    replicas: 1
    resources: {}
    revisionHistoryLimit: 10
    securityContext:
      fsGroup: 472
      runAsGroup: 472
      runAsUser: 472
    service:
      annotations: {}
      enabled: true
      labels: {}
      port: 80
      portName: service
      targetPort: 3000
      type: ClusterIP
    serviceAccount:
      autoMount: true
      create: true
      name: null
      nameTest: null
    serviceMonitor:
      enabled: false
      interval: 1m
      labels: {}
      path: /metrics
      relabelings: []
      scheme: http
      scrapeTimeout: 30s
      tlsConfig: {}
    sidecar:
      dashboards:
        SCProvider: true
        defaultFolderName: null
        enabled: false
        extraMounts: []
        folder: /tmp/dashboards
        folderAnnotation: null
        label: grafana_dashboard
        labelValue: null
        provider:
          allowUiUpdates: false
          disableDelete: false
          folder: ""
          foldersFromFilesStructure: false
          name: sidecarProvider
          orgid: 1
          type: file
        resource: both
        script: null
        searchNamespace: null
        sizeLimit: {}
        watchMethod: WATCH
      datasources:
        enabled: true
        initDatasources: false
        label: grafana_datasource
        labelValue: null
        reloadURL: http://localhost:3000/api/admin/provisioning/datasources/reload
        resource: both
        searchNamespace: null
        sizeLimit: {}
        skipReload: false
        watchMethod: WATCH
      enableUniqueFilenames: false
      image:
        repository: quay.io/kiwigrid/k8s-sidecar
        sha: ""
        tag: 1.19.2
      imagePullPolicy: IfNotPresent
      livenessProbe: {}
      notifiers:
        enabled: false
        label: grafana_notifier
        resource: both
        searchNamespace: null
        sizeLimit: {}
      plugins:
        enabled: false
        initPlugins: false
        label: grafana_plugin
        labelValue: null
        reloadURL: http://localhost:3000/api/admin/provisioning/plugins/reload
        resource: both
        searchNamespace: null
        sizeLimit: {}
        skipReload: false
        watchMethod: WATCH
      readinessProbe: {}
      resources: {}
      securityContext: {}
    smtp:
      existingSecret: ""
      passwordKey: password
      userKey: user
    testFramework:
      enabled: true
      image: bats/bats
      imagePullPolicy: IfNotPresent
      securityContext: {}
      tag: v1.4.1
    tolerations: []
    useStatefulSet: false

