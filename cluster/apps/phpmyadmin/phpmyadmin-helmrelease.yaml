---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: phpmyadmin
  namespace: flux-system
spec:
  chart:
    spec:
      chart: phpmyadmin
      sourceRef:
        kind: HelmRepository
        name: bitnami
      version: 8.2.8
  install: {}
  interval: 1m0s
  targetNamespace: phpmyadmin
  values:
    affinity: {}
    args: []
    clusterDomain: cluster.local
    command: []
    commonAnnotations: {}
    commonLabels: {}
    containerPorts:
      http: 8080
      https: 8443
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
    customLivenessProbe: {}
    customReadinessProbe: {}
    db:
      allowArbitraryServer: true
      bundleTestDB: false
      enableSsl: false
      port: 3306
      ssl:
        caCertificate: ""
        clientCertificate: ""
        clientKey: ""
        verify: true
    extraDeploy: []
    extraEnvVars: {}
    extraEnvVarsCM: null
    extraEnvVarsSecret: null
    extraVolumeMounts: []
    extraVolumes: []
    hostAliases:
    - hostnames:
      - status.localhost
      ip: 127.0.0.1
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: phpmyadmin
      tag: latest
    ingress:
      annotations: {}
      certManager: false
      enabled: false
      extraHosts: []
      extraTls: []
      hostname: phpmyadmin.local
      pathType: ImplementationSpecific
      secrets: []
      tls: false
    initContainers: {}
    kubeVersion: null
    livenessProbe:
      enabled: true
      failureThreshold: 6
      httpGet:
        path: /
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 30
    mariadb: {}
    metrics:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: bitnami/apache-exporter
        tag: 0.9.0-debian-10-r21
      resources: {}
      service:
        annotations:
          prometheus.io/port: '{{ .Values.metrics.service.port }}'
          prometheus.io/scrape: "true"
        port: 9117
        type: ClusterIP
      serviceMonitor:
        additionalLabels: {}
        enabled: false
        honorLabels: false
        interval: 30s
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podLabels: {}
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    readinessProbe:
      enabled: true
      failureThreshold: 6
      httpGet:
        path: /
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 30
    resources:
      limits: {}
      requests: {}
    service:
      annotations: {}
      externalTrafficPolicy: Cluster
      httpsPort: 443
      loadBalancerSourceRanges: []
      nodePorts:
        http: ""
        https: ""
      port: 80
      type: ClusterIP
    sidecars: {}
    tolerations: []
    updateStrategy:
      type: RollingUpdate

