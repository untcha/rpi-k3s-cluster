---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
    spec:
      dnsConfig:
        nameservers:
        - 127.0.0.1
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "pi.hole"
      containers:
      - name: pihole
        image: pihole/pihole:latest
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: ADMIN_EMAIL
          value: ${SECRET_EMAIL}
        - name: TZ
          value: ${TZ}
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole-secrets
              key: PIHOLE_WEBPASSWORD
        - name: PIHOLE_DNS_
          value: "8.8.8.8;8.8.4.4;208.67.222.222;208.67.220.220;4.2.2.1;4.2.2.2;8.26.56.26;8.20.247.20;84.200.69.80;84.200.70.40;9.9.9.9;149.112.112.112;9.9.9.10;149.112.112.10;9.9.9.11;149.112.112.11;1.1.1.1;1.0.0.1"
        - name: DNSSEC
          value: "false"
        - name: DNS_BOGUS_PRIV
          value: "true"
        - name: DNS_FQDN_REQUIRED
          value: "true"
        - name: REV_SERVER
          value: "false"
        - name: ServerIP
          value: ${PIHOLE_SVC_LB_IP}
        - name: IPv6
          value: "false"
        - name: ServerIPv6
          value: "::"
        - name: DNSMASQ_LISTENING
          value: single
        - name: TEMPERATUREUNIT
          value: c
        - name: WEBUIBOXEDLAYOUT
          value: boxed
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https # added
          containerPort: 443
          protocol: TCP
        - name: dns
          containerPort: 53
          protocol: TCP
        - name: dns-udp
          containerPort: 53
          protocol: UDP
        - name: bootp
          containerPort: 67
          protocol: UDP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        volumeMounts:
        - name: pihole-data-volume
          mountPath: '/etc/pihole'
        - name: pihole-dnsmasq-volume
          mountPath: '/etc/dnsmasq.d'
      volumes:
      - name: pihole-data-volume
        persistentVolumeClaim:
          claimName: pihole-data-pvc
      - name: pihole-dnsmasq-volume
        persistentVolumeClaim:
          claimName: pihole-dnsmasq-pvc



