# recipes-local-ingressroute
# recipes-http-ingressroute
# recipes-https-ingressroute

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: recipes-local-ingressroute
  namespace: recipes
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`recipes.${SECRET_DOMAIN_LOCAL_02}`)
      kind: Rule
      services:
        - name: recipes
          port: 8080
    - match: Host(`recipes.${SECRET_DOMAIN_LOCAL_02}`) && (PathPrefix(`/media`) || PathPrefix(`/static`))
      kind: Rule
      services:
        - name: recipes
          port: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: recipes-http-ingressroute
  namespace: recipes
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`recipes.${SECRET_DIGITALOCEAN_DOMAIN_02}`)
      kind: Rule
      middlewares:
        - name: https-redirect-scheme-middleware
          namespace: traefik
      services:
        - name: recipes
          port: 8080
    - match: Host(`recipes.${SECRET_DIGITALOCEAN_DOMAIN_02}`) && (PathPrefix(`/media`) || PathPrefix(`/static`))
      kind: Rule
      middlewares:
        - name: https-redirect-scheme-middleware
          namespace: traefik
      services:
        - name: recipes
          port: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: recipes-https-ingressroute
  namespace: traefik
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns01-production-do"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`recipes.${SECRET_DIGITALOCEAN_DOMAIN_02}`) || Host(`rezepte.${SECRET_DIGITALOCEAN_DOMAIN_02}`)
      kind: Rule
      services:
        - name: recipes
          namespace: recipes
          port: 8080
    - match: Host(`recipes.${SECRET_DIGITALOCEAN_DOMAIN_02}`) && (PathPrefix(`/media`) || PathPrefix(`/static`)) || Host(`rezepte.${SECRET_DIGITALOCEAN_DOMAIN_02}`) && (PathPrefix(`/media`) || PathPrefix(`/static`))
      kind: Rule
      services:
        - name: recipes
          namespace: recipes
          port: 80
    # - match: Host(`rezepte.${SECRET_DIGITALOCEAN_DOMAIN_02}`)
    #   kind: Rule
    #   services:
    #     - name: recipes
    #       namespace: recipes
    #       port: 8080
    # - match: Host(`rezepte.${SECRET_DIGITALOCEAN_DOMAIN_02}`) && (PathPrefix(`/media`) || PathPrefix(`/static`))
    #   kind: Rule
    #   services:
    #     - name: recipes
    #       namespace: recipes
    #       port: 80
  tls:
    secretName: "${SECRET_DOMAIN/./-}-tls"
