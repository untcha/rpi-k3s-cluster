---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: external-dns
  namespace: flux-system
spec:
  chart:
    spec:
      chart: external-dns
      sourceRef:
        kind: HelmRepository
        name: bitnami
      version: 5.1.3
  install: {}
  interval: 1m0s
  targetNamespace: external-dns
  values:
    affinity: {}
    alibabacloud:
      accessKeyId: ""
      accessKeySecret: ""
      regionId: ""
      vpcId: ""
      zoneType: ""
    annotationFilter: ""
    aws:
      apiRetries: 3
      assumeRoleArn: ""
      batchChangeSize: 1000
      credentials:
        accessKey: ""
        mountPath: /.aws
        secretKey: ""
      evaluateTargetHealth: ""
      preferCNAME: ""
      region: us-east-1
      zoneTags: []
      zoneType: ""
    azure:
      aadClientId: ""
      aadClientSecret: ""
      cloud: ""
      resourceGroup: ""
      secretName: ""
      subscriptionId: ""
      tenantId: ""
      useManagedIdentityExtension: false
      userAssignedIdentityID: ""
    cloudflare:
      apiKey: ""
      apiToken: ""
      email: ""
      proxied: true
    clusterDomain: cluster.local
    combineFQDNAnnotation: false
    coredns:
      etcdEndpoints: http://etcd-extdns:2379
      etcdTLS:
        autoGenerated: false
        caFilename: ca.crt
        certFilename: cert.pem
        enabled: false
        keyFilename: key.pem
        mountPath: /etc/coredns/tls/etcd
        secretName: etcd-client-certs
    crd:
      apiversion: ""
      create: false
      kind: ""
    designate:
      customCA:
        content: ""
        enabled: false
        filename: designate-ca.pem
        mountPath: /config/designate
    digitalocean:
      apiToken: ${SECRET_DIGITALOCEAN_API_TOKEN}
    domainFilters: []
    dryRun: false
    excludeDomains: []
    extraArgs: {}
    extraEnv: []
    extraVolumeMounts: []
    extraVolumes: []
    forceTxtOwnerId: false
    fqdnTemplates: []
    google:
      project: ""
      serviceAccountKey: ""
      serviceAccountSecret: ""
      serviceAccountSecretKey: credentials.json
    hetzner:
      secretKey: hetzner_token
      secretName: ""
      token: ""
    hostAliases: []
    ignoreHostnameAnnotation: false
    image:
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: raspbernetes/external-dns
      tag: 1a8e2310ca97a3758d85a3a435e491911a486e7d
    infoblox:
      domainFilter: ""
      gridHost: ""
      maxResults: ""
      noSslVerify: false
      view: ""
      wapiConnectionPoolSize: ""
      wapiHttpTimeout: ""
      wapiPassword: ""
      wapiPort: ""
      wapiUsername: admin
      wapiVersion: ""
    interval: 1m
    linode:
      apiToken: ""
    livenessProbe:
      enabled: true
      failureThreshold: 2
      httpGet:
        path: /healthz
        port: http
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    logFormat: text
    logLevel: info
    metrics:
      enabled: false
      serviceMonitor:
        enabled: false
    namespace: ""
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    ns1:
      minTTL: 10
    ovh:
      applicationKey: ""
      applicationSecret: ""
      consumerKey: ""
    pdns:
      apiKey: ""
      apiPort: "8081"
      apiUrl: ""
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podDisruptionBudget: {}
    podLabels: {}
    podSecurityContext:
      fsGroup: 1001
      runAsUser: 1001
    policy: upsert-only
    priorityClassName: ""
    provider: digitalocean
    publishHostIP: false
    publishInternalServices: false
    rbac:
      apiVersion: v1
      clusterRole: true
      create: true
      pspEnabled: false
    readinessProbe:
      enabled: true
      failureThreshold: 6
      httpGet:
        path: /healthz
        port: http
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    registry: txt
    replicas: 1
    resources: {}
    rfc2136:
      host: ""
      minTTL: 0s
      port: 53
      tsigAxfr: true
      tsigKeyname: externaldns-key
      tsigSecret: ""
      tsigSecretAlg: hmac-sha256
      zone: ""
    scaleway:
      scwAccessKey: ""
      scwDefaultOrganizationId: ""
      scwSecretKey: ""
    secretAnnotations: {}
    securityContext: {}
    service:
      annotations: {}
      enabled: true
      externalIPs: []
      labels: {}
      loadBalancerSourceRanges: []
      port: 7979
      type: ClusterIP
    serviceAccount:
      annotations: {}
      automountServiceAccountToken: true
      create: true
      name: null
    serviceTypeFilter: []
    sources:
    - service
    - ingress
    tolerations: []
    transip:
      account: ""
      apiKey: ""
    triggerLoopOnEvent: false
    txtOwnerId: ""
    vinyldns:
      accessKey: ""
      host: ""
      secretKey: ""
    zoneIdFilters: []
    zoneNameFilters: []

